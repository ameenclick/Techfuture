[{"C:\\Users\\Ameen\\git\\techfuture\\src\\index.js":"1","C:\\Users\\Ameen\\git\\techfuture\\src\\App.js":"2","C:\\Users\\Ameen\\git\\techfuture\\src\\reportWebVitals.js":"3","C:\\Users\\Ameen\\git\\techfuture\\src\\libs\\ContextLib.js":"4","C:\\Users\\Ameen\\git\\techfuture\\src\\components\\BubbleChart.js":"5","C:\\Users\\Ameen\\git\\techfuture\\src\\components\\LandingPage.js":"6","C:\\Users\\Ameen\\git\\techfuture\\src\\components\\Subdomain.js":"7","C:\\Users\\Ameen\\git\\techfuture\\src\\components\\RaceChart.js":"8"},{"size":517,"mtime":1634044614057,"results":"9","hashOfConfig":"10"},{"size":587,"mtime":1634536985921,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1634044614057,"results":"12","hashOfConfig":"10"},{"size":176,"mtime":1634044614057,"results":"13","hashOfConfig":"10"},{"size":5220,"mtime":1634101812787,"results":"14","hashOfConfig":"10"},{"size":7402,"mtime":1634534806230,"results":"15","hashOfConfig":"10"},{"size":8761,"mtime":1634538016459,"results":"16","hashOfConfig":"10"},{"size":1841,"mtime":1634531033575,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"967qef",{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"C:\\Users\\Ameen\\git\\techfuture\\src\\index.js",[],["38","39"],"C:\\Users\\Ameen\\git\\techfuture\\src\\App.js",[],"C:\\Users\\Ameen\\git\\techfuture\\src\\reportWebVitals.js",[],"C:\\Users\\Ameen\\git\\techfuture\\src\\libs\\ContextLib.js",[],"C:\\Users\\Ameen\\git\\techfuture\\src\\components\\BubbleChart.js",["40"],"\r\nimport React from 'react'\r\nimport Chart from \"react-google-charts\";\r\n \r\n\r\n\r\nclass Bubble extends React.Component {\r\n\r\n    constructor(props)\r\n    {\r\n      super(props)\r\n      var date = new Date()\r\n      this.state= {\r\n        curretYear : date.getFullYear(),\r\n        after5Year : date.getFullYear()+5,\r\n        domains: [],\r\n        search: \"\"\r\n      }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setInterval(() => {\r\n          this.forceUpdate();\r\n        }, 3000);\r\n        fetch(\"http://127.0.0.1:5000/domains\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                this.setState({\r\n                  domains:result.domains\r\n                });\r\n                console.log(\"Fetch\")\r\n            },\r\n            (error) =>{\r\n\r\n                console.log(error)\r\n            }\r\n        )\r\n      }\r\n\r\n      setDatalist()\r\n      {\r\n            var datalist = document.querySelector(\"datalist\");\r\n            if(this.state.search === \"\")\r\n            {\r\n                datalist.id=\"\"\r\n            }\r\n            else\r\n            {\r\n                datalist.id=\"domains\"\r\n            }\r\n      }\r\n    \r\n      render() {\r\n        return (\r\n          <>\r\n            <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div class=\"container-fluid\">\r\n                    <a class=\"navbar-brand\" href=\"#\"><b>TechFuture</b></a>\r\n                    <form class=\"d-flex\">\r\n                        <button class=\"btn btn-outline-primary\" type=\"submit\">Explore More</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n            <div className=\"container\">\r\n            <div className=\"row my-5 justify-content-center\">\r\n                    {// Trend Graph\r\n                    }\r\n                        <Chart\r\n                          width={500}\r\n                          height={400}\r\n                          chartType=\"BubbleChart\"\r\n                          loader={<div style={{width:\"500px\", height:\"400px\"}}>\r\n                            <div class=\"spinner-border  align-middle\" role=\"status\" align=\"center\">\r\n                              <span class=\"visually-hidden\">Loading chart...</span>\r\n                            </div>\r\n                            </div>}\r\n                          data={[\r\n                            ['ID', 'Total_Papers', 'Growth_Rate', 'Technology', 'Mean_Score'],\r\n                            ['Extended Reality', 3000 , 0.4, 'Extended Reality', 75],\r\n                            ['IOT', 4000, 0.5, 'IOT', 80],\r\n                            ['Quantum', 6000, 0.8, 'Quantum', 110],\r\n                            ['BlockChain', 5000, 0.6, 'BlockChain', 80],\r\n                            ['AI', 7500, 0.9, 'AI', 140]\r\n                          ]}\r\n                          options={{\r\n                            title:\r\n                              'Total No. of Papers vs Growth Rate in Trending Technologies X=Total No. of Papers, ' +\r\n                              '',\r\n                            hAxis: { title: 'Total No. of papers' },\r\n                            vAxis: { title: 'Growth Rate' },\r\n                            bubble: { textStyle: { fontSize: 11 } },\r\n                          }}\r\n                        />\r\n            </div>\r\n            <div className=\"row justify-content-center\">\r\n                <div className=\"col-lg-4 mt-1 \" align=\"center\">\r\n                    <div class=\"input-group rounded-pills\">\r\n                        <input type=\"text\" list=\"domains\" class=\"form-control form-control-lg\" onChange={()=> this.setDatalist()} onInput={(e)=>this.setState({ search: e.target.value})} placeholder=\"Search domain...\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"/>\r\n                        <span class=\"input-group-text\">\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\r\n                        </svg>\r\n                        </span>\r\n                    </div>\r\n                    <datalist id=\"\">\r\n                            {this.state.domains.map((domain) =>\r\n                                <option>{domain}</option>\r\n                            )}\r\n                        </datalist>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\" align=\"center\">\r\n                <div className=\"col my-5\">\r\n                    <button type=\"button\" class=\"btn btn-lg btn-primary\">Explore</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col\" align=\"center\">\r\n                    <strong>These technologies is booming in {this.state.curretYear} ,Have huge potential to grow by {this.state.after5Year} </strong>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Bubble;","C:\\Users\\Ameen\\git\\techfuture\\src\\components\\LandingPage.js",["41"],"import './css/LandingPage.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport ReactWordcloud from 'react-wordcloud';\r\nimport Subdomain from './Subdomain';\r\nimport RaceChart from './RaceChart';\r\n\r\nfunction LandingPage(){\r\n    var date = new Date()\r\n    const curretYear = date.getFullYear();\r\n    const after5Year = curretYear+5;\r\n    const [words, setWords] = useState([]);\r\n    const [domains, setDomains] = useState([]);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [yearlyAccelaration, setAccelaratation] = useState(false);\r\n    const [domainAccelaration, setDomainaccelaration] = useState([]);\r\n    const visualisationWidth = (window.innerWidth >= 1000)? 1000: window.innerWidth\r\n    const visualisationHeight= 400//window.innerHeight*(60/100)\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        \r\n        //url=\"http://127.0.0.1:5000/accelaration\"\r\n        var url=\"https://tech-futures-backend.herokuapp.com\"\r\n        fetch(url+\"/domains\")\r\n        .then(res => res.json())\r\n        .then(\r\n            (result) => {\r\n                setIsLoaded(true);\r\n                setWords(result[\"mainDomains\"])\r\n                setDomains(result[\"mainDomains\"])\r\n            },\r\n            (error) =>{\r\n                setIsLoaded(true);\r\n                console.log(error)\r\n            })\r\n\r\n            fetch(url+\"/getColumnData\")\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setDomainaccelaration(result[\"data\"])\r\n                },\r\n                (error) =>{\r\n                    console.log(error)\r\n                })\r\n    }, [])\r\n\r\n\r\n    function subdomainClick(d)\r\n    {\r\n        if(d)\r\n        {\r\n            ReactDOM.render(<Subdomain domain={d}/>, document.getElementById(\"main\"));\r\n        }\r\n    }\r\n\r\n    function cloudAction(word){\r\n        var hoverLabel=\"<b>\"+word.text+\"</b><br/>Frequency:(\"+word.value+\")\"\r\n        document.getElementById(\"hovered\").innerHTML=hoverLabel\r\n    }\r\n\r\n      const callbacks = {\r\n        getWordColor: ()=> \"blue\",\r\n        onWordClick: word => subdomainClick(word.text),\r\n        onWordMouseOver: word => console.log(word.text),\r\n        getWordTooltip: word => cloudAction(word),\r\n      }\r\n      const options = {\r\n        rotations: 1,\r\n        rotationAngles: [0],\r\n      };      \r\n      const size = [visualisationWidth,visualisationHeight];\r\n\r\n      function setDatalist()\r\n      {\r\n            var datalist = document.querySelector(\"datalist\");\r\n            if(document.getElementById(\"search\").value === \"\")\r\n            {\r\n                datalist.id=\"\"\r\n            }\r\n            else\r\n            {\r\n                datalist.id=\"domains\"\r\n            }\r\n      }\r\n\r\n    return(\r\n        <>\r\n        <div id=\"main\">\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light sticky-top\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\"><b>TechFuture</b></a>\r\n                </div>\r\n            </nav>\r\n            <div className=\"container\">\r\n            {(!yearlyAccelaration)?\r\n            <>\r\n            <ul class=\"nav nav-tabs\">\r\n                <li class=\"nav-item\">\r\n                    <button class=\"nav-link active\" disabled=\"true\">Explore</button>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <button class=\"nav-link\" onClick={()=>{ setAccelaratation(true); document.getElementById(\"hovered\").innerHTML=\"\"}}>Accelartion</button>\r\n                </li>\r\n                </ul>\r\n                 <div className=\"overflow-visible\">\r\n                    <div className=\"float-end\"  id=\"hovered\">\r\n    \r\n                    </div>\r\n                </div>\r\n             </>\r\n                :\r\n            <ul class=\"nav nav-tabs\">\r\n                <li class=\"nav-item\">\r\n                <button class=\"nav-link\"  onClick={()=>{setAccelaratation(false)}}>Explore</button>\r\n                </li>\r\n                <li class=\"nav-item\">\r\n                    <button class=\"nav-link active\" disabled=\"true\">Accelartion</button>\r\n                </li>\r\n            </ul>\r\n            }\r\n            <div className=\"row mb-2\" id=\"visualisation\">\r\n                    {// Trend Graph\r\n                    }\r\n            {(isLoaded)?\r\n            (yearlyAccelaration)?\r\n                <div className=\"col align-self-center\" style={{ overflowY: \"scroll\", height:size[1], width: size[0]}}>\r\n                    <div className=\"sticky-top float-end\"  id=\"years\"></div>\r\n                    <RaceChart data={domainAccelaration} />\r\n                </div>\r\n            :\r\n                 <ReactWordcloud\r\n                 callbacks={callbacks}\r\n                 options={options}\r\n                 size={size}\r\n                 words={words}\r\n                 />:\r\n                <div className=\"col align-self-center\" style={{ overflowY: \"hidden\", height:size[1], width: size[0]}}>\r\n                    <div class=\"spinner-border\" role=\"status\" align=\"center\">\r\n                        <span class=\"visually-hidden\">Loading chart...</span>\r\n                    </div>\r\n               </div>\r\n            }\r\n                   \r\n            </div>\r\n            <div className=\"row justify-content-center  mb-4\">\r\n                <div className=\"col-lg-4 \" align=\"center\">\r\n                    <div class=\"input-group rounded-pills\">\r\n                        <input type=\"text\" id=\"search\" list=\"domains\" class=\"form-control form-control-lg\" onInput={()=>{ setDatalist()}} placeholder=\"Search domain...\" aria-label=\"Recipient's username\" aria-describedby=\"basic-addon2\"/>\r\n                        <button class=\"btn btn-outline-dark\" onClick={() => subdomainClick(document.getElementById('search').value)}>\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-search\" viewBox=\"0 0 16 16\">\r\n                            <path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\"/>\r\n                        </svg>\r\n                        </button>\r\n                    </div>\r\n                    <datalist id=\"\">\r\n                            {domains.map((domain) =>\r\n                                <option >{domain.text}</option>\r\n                            )}\r\n                        </datalist>\r\n                        \r\n                </div>\r\n            </div>\r\n            {\r\n            // !yearlyAccelaration? \"\" :\r\n            //  <div className=\"row\">\r\n            //     <div className=\"col\" align=\"center\">\r\n            //         <div className=\"col\">\r\n            //             <button type=\"button\" class=\"btn btn-lg btn-primary\" onClick={(e)=>{e.preventDefault(); setAccelaratation(!yearlyAccelaration);}}>Explore</button>\r\n            //         </div>\r\n            //     </div>\r\n            // </div>\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"col fixed-bottom\" align=\"center\">\r\n                    <strong>These technologies is booming in {curretYear} ,Have huge potential to grow by {after5Year} </strong>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LandingPage","C:\\Users\\Ameen\\git\\techfuture\\src\\components\\Subdomain.js",["42","43"],"C:\\Users\\Ameen\\git\\techfuture\\src\\components\\RaceChart.js",["44"],"import ChartRace from 'react-chart-race';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class RaceChart extends Component{\r\n \r\n    constructor(props){\r\n      super(props);\r\n      var years=Object.keys(this.props.data)\r\n      console.log(this.props.data)\r\n      this.state = {\r\n        data: [],\r\n        year: \"\",\r\n        min: parseInt(years[0]),\r\n        max: parseInt(years[years.length-1])\r\n      };\r\n      console.log(this.state.min,this.state.max)\r\n    }\r\n   \r\n     componentDidMount()\r\n     {\r\n         let i=2013\r\n         let intervalId=setInterval(() => {\r\n             if(i<=this.state.max)\r\n             {\r\n                 this.setState({ data: this.props.data[i],\r\n                     year: i});\r\n                     i=i+1\r\n                document.getElementById(\"years\").innerHTML=\"<h2>\"+this.state.year+\"</h2>\"\r\n             }\r\n           }, 2000);\r\n        this.setState({ intervalId: intervalId })\r\n     }\r\n\r\n     componentWillUnmount(){\r\n        document.getElementById(\"years\").innerHTML=\"\"\r\n        clearInterval(this.state.intervalId)\r\n      }\r\n\r\n\r\n    render(){\r\n      return(\r\n        <div>\r\n            <div>\r\n              {this.state.data.length ==0 ?\r\n              <div class=\"spinner-border\" role=\"status\">\r\n              <span class=\"visually-hidden\">Loading chart...</span>\r\n            </div>\r\n              :\r\n              <ChartRace\r\n              data={this.state.data}\r\n              backgroundColor='white'\r\n              width={760}\r\n              padding={12}\r\n              itemHeight={58}\r\n              gap={12}\r\n              titleStyle={{ font: 'normal 400 13px Arial', color: '#000' }}\r\n              valueStyle={{ font: 'normal 400 11px Arial', color: '#000' }}\r\n            />\r\n              }\r\n                \r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n   \r\n  }",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":59,"column":21,"nodeType":"51","endLine":59,"endColumn":54},{"ruleId":"49","severity":1,"message":"50","line":94,"column":21,"nodeType":"51","endLine":94,"endColumn":58},{"ruleId":"52","severity":1,"message":"53","line":95,"column":13,"nodeType":"54","messageId":"55","endLine":95,"endColumn":19},{"ruleId":"49","severity":1,"message":"50","line":139,"column":21,"nodeType":"51","endLine":139,"endColumn":54},{"ruleId":"56","severity":1,"message":"57","line":45,"column":39,"nodeType":"58","messageId":"59","endLine":45,"endColumn":41},"no-native-reassign",["60"],"no-negated-in-lhs",["61"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-unused-vars","'target' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]