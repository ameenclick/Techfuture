{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ameen\\\\git\\\\techfuture\\\\src\\\\componenets\\\\RaceChart.js\";\nimport ChartRace from 'react-chart-race';\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class RaceChart extends Component {\n  constructor(props) {\n    super(props);\n    var years = Object.keys(this.props.data);\n    this.state = {\n      data: [],\n      year: \"\",\n      min: parseInt(years[0]),\n      max: parseInt(years[years.length - 1])\n    };\n    console.log(this.state.min, this.state.max); // this.handleChange();\n    //   var date = 2000\n    //     setInterval(() => {\n    //         if(date <= 2021)\n    //         {\n    //             this.setState({ year: date})\n    //             date =date+1\n    //             this.handleChange();\n    //         }\n    //     }, 2000);\n  } //  getRandomInt(min, max){\n  //    min = Math.ceil(min);\n  //    max = Math.floor(max);\n  //    return Math.floor(Math.random() * (max - min + 1)) + min;\n  //  }\n  //  handleChange(){\n  //    const data = [\n  //      { id: 0, title: 'Mathematical software', value: this.getRandomInt(10, 90), color: \"rgb(123,22,200)\" },\n  //      { id: 1, title: 'Document management and text processing', value: 38, color: '#3fc42d' },\n  //      { id: 2, title: 'Software organization and properties', value: this.getRandomInt(10, 90), color: '#c33178' },\n  //      { id: 3, title: 'Computer graphics', value: this.getRandomInt(10, 90), color: '#423bce' },\n  //      { id: 4, title: 'Software creation and management', value: 58, color: '#c8303b' },\n  //      { id: 5, title: 'Communication hardware', value: 16, color: '#2c2c2c' },\n  //      { id: 6, title: 'Organizations', value: this.getRandomInt(10, 90), color: '#423bcf' }\n  //    ];\n  //    this.setState({ data });\n  // }\n\n\n  componentDidMount() {\n    let i = this.state.min;\n    setInterval(() => {\n      if (i <= this.state.max) {\n        this.setState({\n          data: this.props.data[i],\n          year: i\n        });\n        i = i + 1;\n\n        if (this.props.status) {\n          document.getElementById(\"hovered\").innerHTML = \"<h2>\" + this.state.year + \"</h2>\";\n        }\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    this.setState({\n      year: \"\"\n    });\n    document.getElementById(\"hovered\").innerHTML = \"\";\n    clearInterval(this.state.intervalId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(ChartRace, {\n          data: this.state.data,\n          backgroundColor: \"white\",\n          width: 760,\n          padding: 12,\n          itemHeight: 58,\n          gap: 12,\n          titleStyle: {\n            font: 'normal 400 13px Arial',\n            color: '#000'\n          },\n          valueStyle: {\n            font: 'normal 400 11px Arial',\n            color: '#000'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/Ameen/git/techfuture/src/componenets/RaceChart.js"],"names":["ChartRace","React","Component","RaceChart","constructor","props","years","Object","keys","data","state","year","min","parseInt","max","length","console","log","componentDidMount","i","setInterval","setState","status","document","getElementById","innerHTML","componentWillUnmount","clearInterval","intervalId","render","font","color"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,kBAAtB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAGA,eAAe,MAAMC,SAAN,SAAwBD,SAAxB,CAAiC;AAE5CE,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,QAAIC,KAAK,GAACC,MAAM,CAACC,IAAP,CAAY,KAAKH,KAAL,CAAWI,IAAvB,CAAV;AACA,SAAKC,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE,EADK;AAEXE,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,GAAG,EAAEC,QAAQ,CAACP,KAAK,CAAC,CAAD,CAAN,CAHF;AAIXQ,MAAAA,GAAG,EAAED,QAAQ,CAACP,KAAK,CAACA,KAAK,CAACS,MAAN,GAAa,CAAd,CAAN;AAJF,KAAb;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWE,GAAvB,EAA2B,KAAKF,KAAL,CAAWI,GAAtC,EATgB,CAUjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,GAtB2C,CAwB5C;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAECI,EAAAA,iBAAiB,GACjB;AACI,QAAIC,CAAC,GAAC,KAAKT,KAAL,CAAWE,GAAjB;AACAQ,IAAAA,WAAW,CAAC,MAAM;AACd,UAAGD,CAAC,IAAE,KAAKT,KAAL,CAAWI,GAAjB,EACA;AACI,aAAKO,QAAL,CAAc;AAAEZ,UAAAA,IAAI,EAAE,KAAKJ,KAAL,CAAWI,IAAX,CAAgBU,CAAhB,CAAR;AACVR,UAAAA,IAAI,EAAEQ;AADI,SAAd;AAEIA,QAAAA,CAAC,GAACA,CAAC,GAAC,CAAJ;;AACA,YAAG,KAAKd,KAAL,CAAWiB,MAAd,EACA;AACGC,UAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA6C,SAAO,KAAKf,KAAL,CAAWC,IAAlB,GAAuB,OAApE;AACF;AACR;AACF,KAXQ,EAWN,IAXM,CAAX;AAYH;;AAEDe,EAAAA,oBAAoB,GAAE;AACnB,SAAKL,QAAL,CAAc;AAAEV,MAAAA,IAAI,EAAE;AAAR,KAAd;AACAY,IAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,SAAnC,GAA6C,EAA7C;AACAE,IAAAA,aAAa,CAAC,KAAKjB,KAAL,CAAWkB,UAAZ,CAAb;AACD;;AAGHC,EAAAA,MAAM,GAAE;AACN,wBACE;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACI,QAAC,SAAD;AACI,UAAA,IAAI,EAAE,KAAKnB,KAAL,CAAWD,IADrB;AAEI,UAAA,eAAe,EAAC,OAFpB;AAGI,UAAA,KAAK,EAAE,GAHX;AAII,UAAA,OAAO,EAAE,EAJb;AAKI,UAAA,UAAU,EAAE,EALhB;AAMI,UAAA,GAAG,EAAE,EANT;AAOI,UAAA,UAAU,EAAE;AAAEqB,YAAAA,IAAI,EAAE,uBAAR;AAAiCC,YAAAA,KAAK,EAAE;AAAxC,WAPhB;AAQI,UAAA,UAAU,EAAE;AAAED,YAAAA,IAAI,EAAE,uBAAR;AAAiCC,YAAAA,KAAK,EAAE;AAAxC;AARhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD;;AApF2C","sourcesContent":["import ChartRace from 'react-chart-race';\r\nimport React, { Component } from 'react';\r\n\r\n\r\nexport default class RaceChart extends Component{\r\n \r\n    constructor(props){\r\n      super(props);\r\n      var years=Object.keys(this.props.data)\r\n      this.state = {\r\n        data: [],\r\n        year: \"\",\r\n        min: parseInt(years[0]),\r\n        max: parseInt(years[years.length-1])\r\n      };\r\n      console.log(this.state.min,this.state.max)\r\n     // this.handleChange();\r\n    //   var date = 2000\r\n    //     setInterval(() => {\r\n    //         if(date <= 2021)\r\n    //         {\r\n    //             this.setState({ year: date})\r\n    //             date =date+1\r\n    //             this.handleChange();\r\n    //         }\r\n    //     }, 2000);\r\n    }\r\n   \r\n    //  getRandomInt(min, max){\r\n    //    min = Math.ceil(min);\r\n    //    max = Math.floor(max);\r\n    //    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    //  }\r\n   \r\n    //  handleChange(){\r\n    //    const data = [\r\n    //      { id: 0, title: 'Mathematical software', value: this.getRandomInt(10, 90), color: \"rgb(123,22,200)\" },\r\n    //      { id: 1, title: 'Document management and text processing', value: 38, color: '#3fc42d' },\r\n    //      { id: 2, title: 'Software organization and properties', value: this.getRandomInt(10, 90), color: '#c33178' },\r\n    //      { id: 3, title: 'Computer graphics', value: this.getRandomInt(10, 90), color: '#423bce' },\r\n    //      { id: 4, title: 'Software creation and management', value: 58, color: '#c8303b' },\r\n    //      { id: 5, title: 'Communication hardware', value: 16, color: '#2c2c2c' },\r\n    //      { id: 6, title: 'Organizations', value: this.getRandomInt(10, 90), color: '#423bcf' }\r\n    //    ];\r\n    //    this.setState({ data });\r\n    // }\r\n   \r\n     componentDidMount()\r\n     {\r\n         let i=this.state.min\r\n         setInterval(() => {\r\n             if(i<=this.state.max)\r\n             {\r\n                 this.setState({ data: this.props.data[i],\r\n                     year: i});\r\n                     i=i+1\r\n                     if(this.props.status)\r\n                     {\r\n                        document.getElementById(\"hovered\").innerHTML=\"<h2>\"+this.state.year+\"</h2>\"\r\n                     }   \r\n             }\r\n           }, 1000);\r\n     }\r\n\r\n     componentWillUnmount(){\r\n        this.setState({ year: \"\"});\r\n        document.getElementById(\"hovered\").innerHTML=\"\"\r\n        clearInterval(this.state.intervalId)\r\n      }\r\n\r\n\r\n    render(){\r\n      return(\r\n        <div>\r\n            <div className=\"row\">\r\n                <ChartRace\r\n                    data={this.state.data}\r\n                    backgroundColor='white'\r\n                    width={760}\r\n                    padding={12}\r\n                    itemHeight={58}\r\n                    gap={12}\r\n                    titleStyle={{ font: 'normal 400 13px Arial', color: '#000' }}\r\n                    valueStyle={{ font: 'normal 400 11px Arial', color: '#000' }}\r\n                />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n   \r\n  }"]},"metadata":{},"sourceType":"module"}